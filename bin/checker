#!/bin/bash

###
# Usage:
#   Check diff with dev branch
#   app/tools/check.sh
#
#   Check diff and uncommitted files
#   app/tools/check.sh diff
#
#   Check all project files
#   app/tools/check.sh all
#
#   Check all project files and fix
#   app/tools/check.sh - fix
###

TYPE="$1"
FIX="$2"

DIR="$( cd "$( dirname $( dirname "${BASH_SOURCE[0]}" ) )" && pwd )"

###
# Setup colors
###

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[1;34m'
GRAY='\033[1;30m'
NC='\033[0m' # No Color

###
# Define functions
###

function section {
    echo
    echo -e "${BLUE}$1${NC}"
    echo
}

function skip {
    echo -e "${GRAY}$1${NC}"
}

function command {
    echo
    echo -e "${YELLOW}$1${NC}"
}

function success {
    echo
    echo -e "${GREEN}$1${NC}"
}

###
# PHP checks
###

case "$TYPE" in
    all)

        FILES_ALL=$(git ls-files)
        ;;
    diff)
        FILES_ALL=$(git diff --name-only --diff-filter=ACM origin/dev)
        ;;
    *)
        FILES_ALL=$(git diff origin/dev...HEAD --diff-filter=ACM --name-only)
        ;;
esac

section "CHANGES"
printf ' - %s\n' $FILES_ALL

FILES_PHP=$(printf '%s\n' $FILES_ALL | grep '\.php')
FILES_PHP_FILTERED=$(printf '%s\n' $FILES_PHP | grep -v 'Migrations' | grep -v 'Tests')
FILES_JS=$(printf '%s\n' $FILES_ALL | grep -e '\.js$' -e '\.vue$' -e '\.twig$' -e '\.html$')

section "PHP CHECKS"

if [ -z "$FILES_PHP" ];
then
    skip "Skipping php check: no php file was changed"
else
    command "Syntax check, Mess Detector"
    for f in $FILES_PHP
    do
        php -l $f 1> /dev/null
        bin/phpmd $f text $DIR/rulesets/pmd.xml
    done

    command "Coding Standards Fixer"
    bin/php-cs-fixer fix --config=$DIR/rulesets/.php_cs.dist --stop-on-violation --show-progress=none --using-cache=no --path-mode=intersection -- $FILES_PHP

    command "Code Beautifier and Fixer"
    bin/phpcbf $FILES_PHP

    command "Coding Standards"
    bin/phpcs $FILES_PHP -s --standard=$DIR/rulesets/phpcs.xml

    command "Copy/Paste Detector"
    bin/phpcpd $FILES_PHP_FILTERED
fi

echo

###
# Javascript checks
###

section "JS CHECKS"

if [ -z "$FILES_JS" ];
then
    skip "Skipping js check: no js/vue/twig/html file was changed"
else
    if [ "$FIX" == "fix" ];
    then
        command "Syntax and automatically fix problems"
        node_modules/.bin/eslint $FILES_JS --ext js,vue --fix
    else
        command "Syntax"
        node_modules/.bin/eslint $FILES_JS --ext js,vue
    fi

    command "Unit Tests"
    node_modules/.bin/karma start app/karma.conf.js.dist --single-run
fi

success "Checking completed"
